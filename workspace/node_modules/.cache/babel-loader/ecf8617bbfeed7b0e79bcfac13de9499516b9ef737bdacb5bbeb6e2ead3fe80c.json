{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Holliday\\\\Documents\\\\GitHub\\\\ubh-fall2023-CPompey1\\\\workspace\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Register.css';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  function validatePassword(username, password) {\n    const pattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    const usernamePattern = /^[a-zA-Z0-9]+$/;\n\n    //Minimum eight characters, at least one letter and one number\n    //https://stackoverflow.com/questions/19605150/regex-for-password-must-contain-at-least-eight-characters-at-least-one-number-a\n    //https://stackoverflow.com/questions/46155/how-can-i-validate-an-email-address-in-javascript\n\n    if (username.length == 0) {\n      alert(\"Username field is empty\");\n      //some feedback on empty fields\n    }\n\n    if (password.length == 0) {\n      alert(\"Password field is empty\");\n      //some feedback on empty fields\n    }\n\n    console.log(pattern.test(password));\n    if (pattern.test(password) == false) {\n      alert(\"Password must contain 8+ characters, including at least one letter and number.\");\n      //some feedback on weak pass\n    }\n\n    if (usernamePattern.test(username) == false) {\n      alert(\"Username is invalid\");\n      //some feedback on weak pass\n    } else if (usernamePattern.test(username) == true && pattern.test(password) == true) {\n      alert(\"User registered!\");\n      navigate(\"/files\");\n    }\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Register submitted with data:', formData);\n    let form = new FormData(document.querySelector(\"form\"));\n    console.log(form.get(\"username\"), form.get(\"password\"));\n    const username = form.get(\"username\");\n    const password = form.get(\"password\");\n\n    //const feedback = validatePassword (username, password)\n  };\n\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  //need to add password regex\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Reg\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Reg-header\",\n      children: /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://fonts.cdnfonts.com/css/cowboys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Header-title\",\n        children: \"Outlaw Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Reg-rectangle\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"enterforms\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              className: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-box\",\n              type: \"username\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-box\",\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"Reg-button\",\n        children: \" Register \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"OYae9yi3e5wk8OUi6JXr0Cew6cI=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","useNavigate","jsxDEV","_jsxDEV","Register","_s","navigate","validatePassword","username","password","pattern","usernamePattern","length","alert","console","log","test","handleSubmit","e","preventDefault","formData","form","FormData","document","querySelector","get","setFormData","handleInputChange","name","value","target","className","children","rel","href","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Holliday/Documents/GitHub/ubh-fall2023-CPompey1/workspace/src/pages/Register.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './Register.css';\r\n\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Register() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  function validatePassword(username,password,){\r\n\r\n    const pattern = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/\r\n    const usernamePattern = /^[a-zA-Z0-9]+$/\r\n    \r\n    //Minimum eight characters, at least one letter and one number\r\n    //https://stackoverflow.com/questions/19605150/regex-for-password-must-contain-at-least-eight-characters-at-least-one-number-a\r\n    //https://stackoverflow.com/questions/46155/how-can-i-validate-an-email-address-in-javascript\r\n\r\n\r\n\r\n    \r\n\r\n    if ( username.length == 0 ){\r\n      alert (\"Username field is empty\");\r\n        //some feedback on empty fields\r\n    }\r\n\r\n    if (password.length == 0){\r\n        \r\n        alert(\"Password field is empty\");\r\n        //some feedback on empty fields\r\n    }\r\n\r\n    console.log(pattern.test(password))\r\n\r\n    if (pattern.test(password) == false){\r\n        alert(\"Password must contain 8+ characters, including at least one letter and number.\")\r\n        //some feedback on weak pass\r\n    }\r\n\r\n    if (usernamePattern.test(username) == false){\r\n        \r\n        alert(\"Username is invalid\");\r\n        //some feedback on weak pass\r\n    }\r\n\r\n    else if((usernamePattern.test(username)==true) && (pattern.test(password)==true)){\r\n      alert(\"User registered!\");\r\n      navigate(\"/files\");\r\n    }\r\n}\r\n\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Register submitted with data:', formData);\r\n    let form = new FormData(document.querySelector(\"form\"))\r\n    \r\n    console.log(form.get(\"username\"), form.get(\"password\"))\r\n    \r\n        \r\n    const username = form.get(\"username\")\r\n    const password = form.get(\"password\")\r\n\r\n    //const feedback = validatePassword (username, password)\r\n    \r\n\r\n   };\r\n  const [formData, setFormData] = useState({ username: '', password: '' });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n //need to add password regex\r\n  return (\r\n    \r\n    <div className=\"Reg\">\r\n      <header className=\"Reg-header\">\r\n      <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://fonts.cdnfonts.com/css/cowboys\"\r\n      />\r\n        \r\n      </header>\r\n      <body>\r\n      <button className=\"Header-title\">Outlaw Network</button>\r\n          <div className=\"Reg-rectangle\">\r\n            <form onSubmit={handleSubmit}>\r\n            <div className=\"enterforms\">\r\n              <label htmlFor=\"username\" className='username'>Username:</label>\r\n                <input className='input-box'\r\n                type=\"username\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                value={formData.username}\r\n                onChange={handleInputChange}\r\n                required\r\n                /> \r\n              <label htmlFor=\"password\" className='password'>Password:</label>\r\n                <input className='input-box'\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                required\r\n                /> \r\n            </div>\r\n            </form>\r\n          </div>\r\n          <button onClick={handleSubmit} className=\"Reg-button\"> Register </button>\r\n      </body>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}